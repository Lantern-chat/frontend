const fs = require('fs');

const PATH = './src/ui/components/common/markdown/components/code.tsx';

let code = fs.readFileSync(PATH).toString();

let hljs = require('highlight.js/lib/core');

let language_files = fs.readdirSync('./node_modules/highlight.js/lib/languages').filter(p => !p.endsWith('.js.js')).map(p => {
    let lang = require('highlight.js/lib/languages/' + p.slice(0, -3));

    // intercept aliases for this language as it's registered
    let aliases = [];
    hljs.registerLanguage(p.slice(0, -3), (h) => {
        let l = lang(h);
        aliases = l.aliases;
        return l;
    });

    return { p, aliases };
});

code = code.replace(
    /\/\/ == AUTOGENERATED BELOW THIS LINE ==[^]*/,
    `// == AUTOGENERATED BELOW THIS LINE ==
const LANGUAGES: { [language: string]: () => Promise<{ default: LanguageFn }> } = {
${language_files.map(l => `    "${l.p.slice(0, -3)}": () => import("highlight.js/lib/languages/${l.p}")`).join(",\n")}
}
${language_files.filter(l => l.aliases && l.aliases.length).map(l => `${l.aliases.map(a => `LANGUAGES["${a}"]`).join(" = ")} = LANGUAGES["${l.p.slice(0, -3)}"];`).join("\n")}
`);

fs.writeFileSync(PATH, code);