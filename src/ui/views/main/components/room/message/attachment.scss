@import "lib/variables";

.ln-msg-attachment {
    text-indent: 0;
    position: relative;
    user-select: none;

    //padding-left: 1em;
    //border-left: 2px solid rgb(160, 160, 160);

    //> * {
    //    margin-bottom: 0.5em;
    //}

    & > *:first-child {
        margin-top: 0.5em;
    }

    &--grid & > *:first-child {
        margin-top: 0;
    }

    .ln-msg__title + & > div:first-child {
        margin-top: 0;
    }

    // // spacing between multiple attachments
    // &:not(:first-child) > * {
    //     margin-top: 0.5em;
    // }

    // first attachments that come after some message text, needs spacing after text
    //.ln-msg ~ & > *:first-child {
    //    margin-top: 0.5em;
    //}

    // // first attachments with no preceeding text, no spacing (otherwise since it's not the first child in parent the "multiple attachments" rule applies)
    // .ln-msg__title ~ & > *:first-child {
    //     margin-top: 0;
    // }

    .spoiler-label {
        text-align: center;
        position: absolute;
        inset: 0;
        display: flex;
        justify-content: center;
        flex-direction: column;

        .ui-text {
            color: white;
            background-color: rgba(0, 0, 0, 0.5);
            margin: auto;
            padding: 0.75em 1em;
            border-radius: 2em;
        }

        &:hover .ui-text {
            background-color: rgba(0, 0, 0, 0.75);
        }

        cursor: pointer;
    }

    &.spoiler {
        overflow: hidden;
        width: fit-content;

        // temporary fix for ios..
        @supports (-webkit-touch-callout: none) {
            width: auto;
        }

        img,
        video {
            filter: blur(2em);
        }
    }

    // Must go before grid overrides
    audio,
    video,
    img {
        max-height: max(min(50vh, 40em), 9 * 2.5em);
        max-width: min(100%, max(50vw, 16 * 2.5em));
        object-fit: contain;

        @media (min-width: $ln-min-room-width) {
            .ln-small-attachments & {
                max-height: 9 * 2em;
                max-width: 16 * 2em;
            }
        }

        @media (max-width: $ln-max-room-width) {
            max-width: 100%;
        }

        display: block;
        height: auto;
        width: auto;

        outline: none;
        border: 0;

        &:-moz-loading {
            visibility: hidden;
        }

        // TODO: Revisit this, trying to use variables to keep is
        // lower priority than direct aspect-ratio on the element
        aspect-ratio: var(--aspect-ratio);
    }

    &--grid {
        display: grid;

        @media (min-width: $ln-min-room-width) {
            .ln-small-attachments & {
                width: 70%;
            }
        }
    }

    &--grid & {
        padding-inline-end: 0;
    }

    &--grid &--grid-item {
        img,
        video {
            aspect-ratio: 1 / 1;
            object-fit: cover;
            min-height: 0;
            border-radius: 3px; // NOTE: Using px is rare, but I want this to be very subtle
            padding-right: 0.5em;
            width: 100%;

            &:first-child {
                padding-top: 0.5em;
            }
        }

        // wide
        &.w2 {
            img,
            video {
                aspect-ratio: 2 / 1;
            }
        }

        // tall
        &.h2 {
            img,
            video {
                aspect-ratio: 1 / 2;
            }
        }

        @media (min-width: $ln-min-room-width) {
            .ln-small-attachments & {
                max-width: none;
            }
        }
    }

    @media (max-width: $ln-max-room-width) {
        //padding-left: 1rem;
        padding-inline-end: 1rem;
        text-align: center;
    }

    &__download {
        margin-inline-start: 1em;
    }

    // &--grid &__generic&__generic
    @at-root #{&}--grid #{&}__generic#{&}__generic {
        @media (max-width: $ln-max-room-width) {
            margin-block: 0.5em 0.25em;
            right: 0.25em;
            position: relative;
        }
    }

    &--grid &__generic {
        @media (min-width: $ln-min-room-width) {
            display: flex; // stretches
            max-width: calc(100% - 0.5em);
        }
    }

    .ln-grey-img-bg & {
        video,
        img {
            // fixes the grey background bleeding into padding
            background-clip: text;

            // bug in chrome/webkit that still shows a line of pixels that should have been clipped
            @media screen and (-webkit-min-device-pixel-ratio: 0) {
                transform: translate3d(0, 0, 0);
            }
            @-moz-document url-prefix() {
                // firefox works fine, might match the above query so revert back
                transform: none;
            }
        }
    }

    .ln-grey-img-bg.ln-dark-theme & {
        video,
        img[data-loaded="true"] {
            background-color: rgba(256, 256, 256, 0.55);
        }
    }

    .ln-grey-img-bg.ln-light-theme & {
        video,
        img[data-loaded="true"] {
            background-color: rgba(128, 128, 128, 0.4);
        }
    }

    img {
        cursor: pointer;
    }

    video {
        background-color: black;
    }

    audio {
        width: 100%;
        max-width: 80%;
    }

    &__generic {
        text-align: start;
        padding: 0.5em;
        background-color: $lnx-primary-surface-color;

        display: inline-flex;
        flex-wrap: nowrap;

        min-width: 20em;
        max-width: calc(100% - 1em);

        border-radius: 0.25em;
        box-shadow: inset 0 0 0.2em rgba(0, 0, 0, 0.1);

        @media (max-width: $ln-max-room-width) {
            min-width: 0;
            max-width: 100%;
            width: 100%;
        }

        // mime type
        .ln-icon {
            font-size: 2.75em;
            display: inline-flex;

            .ln-light-theme & {
                svg {
                    fill: $lnx-secondary-text-color;
                }
            }
        }

        // both links
        a {
            white-space: break-spaces;
            word-wrap: break-word;

            // download icon
            .ln-icon {
                font-size: 2em;
            }
        }

        // every item in the generic attachment is vertically centered
        > * {
            display: flex;
            flex-direction: column;
            justify-content: center;
        }
    }
}

.ln-audio {
    .no-text & {
        display: inline;

        audio {
            display: inline;
            vertical-align: middle;
            margin: 0;
            height: 100%;
        }
    }
}

.ln-attachment-link {
    max-width: 100%;
    flex: 1 1 auto;
    min-width: 0; // prevents it from overflowing if text gets too long
    user-select: text;

    a {
        user-select: all;
    }
}

.ln-attachment-metadata {
    color: $lnx-secondary-text-color;
    font-size: 0.8em;
    user-select: text;

    &--full {
        margin-block: 0.25em;
        //margin-bottom: -0.25em;
        display: flex;
        white-space: nowrap;

        span {
            overflow: hidden;
            max-width: min(60%, 70vw);
            display: inline-block;
            text-overflow: ellipsis;
            user-select: all;
        }

        .ln-msg-attachment--grid-item & {
            display: flex;
            //height: 1.5em;
            margin: none;
            margin-block-end: 0.25em;
            padding-right: 0.5em;
        }
    }

    .emoji {
        width: 1em;
        height: 1em;
        display: inline;
    }
}
