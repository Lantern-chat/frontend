@use "sass:math";

@import "lib/variables";

.ln-embed {
    background-color: $lnx-primary-surface-color;

    margin-block-start: 0.25em;
    padding-block-start: 0.5em;
    padding-block-end: 0.25em;
    padding-inline: 1em;

    position: relative;
    overflow: hidden;

    border-radius: 0.25rem;

    > * {
        display: block;
    }

    > *:empty {
        display: none;
    }

    // .ln-light-theme & {
    box-shadow: rgba(0, 0, 0, 0.1) 0.15em 0.05em 0.25em;
    // }

    .ln-oled-theme & {
        box-shadow: $ln-oled-border-color 1px 1px;
    }

    &__title,
    &__desc,
    &__author,
    &__thumb,
    &__media {
        margin-block-end: 0.5rem;
    }

    // > *:not(:last-child) {
    //     margin-block-end: 0.5em;
    // }

    &__title {
        cursor: pointer;
        overflow-wrap: break-word;
    }

    &__desc,
    &__footer {
        color: $lnx-secondary-text-color;
        white-space: pre-line;
        overflow-wrap: break-word;
    }

    &__thumb {
        // NOTE: float: inline-start is not fully supported yet,
        // so rtl still needs to be done manually.
        float: left;
        float: inline-start;

        .ln-rtl & {
            float: right;
            float: inline-start;
        }

        overflow: hidden;
        margin-right: 1em;
        border-radius: 0.25em;

        img,
        video {
            display: block;
            max-width: 10em;
            max-height: 10em;
            width: fit-content;
            height: fit-content;
            object-fit: contain;
            object-position: left;
        }
    }

    &::before {
        content: "";
        position: absolute;
        inset: 0 auto 0 0;
        width: 0.25rem;
        background-color: var(--embed-ac);
        opacity: 0.75;
    }

    &__author {
        //text-indent: 1em;
        //padding-block-start: 1em;

        font-weight: bold;

        a,
        span {
            color: $lnx-primary-text-color;
        }

        img {
            float: right;
            max-width: 3em;
            max-height: 3em;
        }
    }

    &__spoiler {
        // NOTE: https://bugzilla.mozilla.org/show_bug.cgi?id=1657997
        backdrop-filter: blur(1.5rem);
        -webkit-backdrop-filter: blur(1.5rem);

        position: absolute;
        inset: 0;
        display: flex;
        justify-content: center;
        text-align: center;
        flex-direction: column;
        margin: 0 !important; // TODO: Code smell, overrides the >*:not(:last-child)

        // clear the accent color bar
        left: 0.25em;
        @media screen and (-webkit-min-device-pixel-ratio: 0) {
            // chrome subpixel rendering sucks
            left: calc(0.25em + 1px);
        }
        @-moz-document url-prefix() {
            // firefox works fine, might match the above query so revert back
            left: 0.25em;
        }

        span {
            color: white;
            background-color: rgba(0, 0, 0, 0.5);
            margin: auto;
            padding: 0.75em 1em;
            border-radius: 2em;
        }

        &:hover span {
            background-color: rgba(0, 0, 0, 0.75);
        }

        cursor: pointer;
    }

    &__footer {
        font-size: 0.8em;
        text-indent: 0.5em;
        line-height: 1;
    }

    // compact provider if directly below a non-empty media block
    &__media:not(:empty) ~ &__provider,
    &__media:not(:empty) ~ &__footer {
        margin-block-start: -0.25rem;
    }

    // &__media:not(:empty) ~ &__footer {
    //     margin-block-start: -0.25rem;
    // }

    &__spoiler + &__provider {
        z-index: 1;
        position: relative;
    }

    &__provider {
        float: right;
        text-align: right;
        line-height: 1;
        margin-inline-end: -0.5rem;
        clear: both;

        img,
        video {
            height: 1em;
            width: 1em;
            object-fit: contain;
            vertical-align: text-bottom;
            margin-inline-start: 0.25rem;
        }

        span,
        a {
            color: $lnx-secondary-text-color;
        }
    }

    &__media {
        position: relative;
        clear: both;
        height: fit-content;
        display: flex;
        flex-direction: column;
        overflow: hidden;

        a {
            position: absolute;
            inset: 0;
            cursor: pointer;
        }

        &-loading {
            display: inline;
        }

        @at-root #{&} #{&}-loading {
            display: flex;
            position: absolute;
            inset: 0;
            justify-content: center;
            flex-direction: column;
            align-items: center;
            pointer-events: none;

            &::before {
                content: "";

                $shadow: ();

                @for $i from 0 through 8 {
                    $angle: math.div(360deg, 8) * $i;
                    $x: math.cos($angle) * 2.5em;
                    $y: math.sin($angle) * 2.5em;
                    $shadow: append($shadow, $x $y 0 0 rgba(255, 255, 255, math.div(100%, 8) * $i), comma);
                }

                box-shadow: $shadow;

                //position: absolute;
                //inset: 0;
                //margin: auto auto;
                font-size: 25px;
                .ln-small-attachments & {
                    font-size: 15px;
                }
                width: 1em;
                height: 1em;
                border-radius: 50%;
                text-indent: -9999em;
                //transform: translateZ(0);
                transform-origin: center;
                animation: 2s rotate_loading_icon step-end infinite;
                z-index: 1;

                @keyframes rotate_loading_icon {
                    @for $i from 0 through 8 {
                        #{math.div(100%, 8) * $i} {
                            transform: translateZ(0) rotate(#{math.div(360deg, 8) * $i});
                        }
                    }
                }
            }
        }

        video,
        img,
        audio,
        iframe {
            width: 100%;
            //height: 100%;
            max-height: 30em;
            max-width: 100%;
            //max-height: max(min(50vh, 40em), 9 * 2.5em);
            border: none;
            outline: none;
            object-fit: contain;
            object-position: left top;

            .ln-rtl & {
                object-position: right top;
            }

            //object-position: inline-start;

            .ln-small-attachments & {
                max-height: 20em;
            }
        }

        video,
        img,
        audio {
            height: 100%;
        }

        video,
        .ln-embed__consent ~ img {
            object-position: center center;
        }
    }

    &__iframe {
        display: flex;
        flex-direction: column;
        max-height: 30em;

        iframe {
            flex: 1 0 auto;

            @media (max-width: $ln-max-room-width) {
                height: 100%;
            }
        }
    }

    &__play-icon {
        position: absolute;
        inset: 0;
        margin: auto;
        font-size: 5rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        filter: drop-shadow(0rem 0rem 0.2rem black);
        cursor: pointer;
        opacity: 0.5;

        &:hover {
            opacity: 1;
        }

        .ln-enable-motion & {
            transition: opacity 0.1s ease-in;
        }

        .ln-icon {
            background-color: $lnx-accent-color;
            border-radius: 0.75rem;
        }
    }

    &__play-bg {
        //min-height: 20em;

        // https://css-generators.com/wavy-shapes/
        div {
            height: 100%;
            width: 100%;

            --mask: radial-gradient(
                        2.365em at 50% calc(100% + 2em),
                        #0000 calc(99% - 0.25em),
                        #000 calc(101% - 0.25em) 99%,
                        #0000 101%
                    )
                    calc(50% - 2em) calc(50% - 0.625em + 0.5px) / 4em 1.25em,
                radial-gradient(2.365em at 50% -2em, #0000 calc(99% - 0.25em), #000 calc(101% - 0.25em) 99%, #0000 101%)
                    50% calc(50% + 0.625em) / 4em 1.25em;
            -webkit-mask: var(--mask);
            mask: var(--mask);

            background: linear-gradient(
                    135deg,
                    rgb(31, 0, 92),
                    rgb(91, 0, 96),
                    rgb(135, 1, 96),
                    rgb(172, 37, 94),
                    rgb(202, 72, 92),
                    rgb(225, 107, 92),
                    rgb(243, 144, 96),
                    rgb(255, 181, 107)
                )
                fixed;
        }
    }
}
